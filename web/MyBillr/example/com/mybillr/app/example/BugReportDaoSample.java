/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mybillr.app.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.mybillr.app.dao.BugReportDao;
import com.mybillr.app.dto.BugReport;
import com.mybillr.app.exceptions.BugReportDaoException;
import com.mybillr.app.factory.BugReportDaoFactory;

public class BugReportDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findByUser(0);
		// findWhereIdEquals(0);
		// findWhereTitleEquals("");
		// findWhereUserIdEquals(0);
		// findWhereMessageEquals("");
		// findWhereReportedOnEquals(null);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			BugReportDao _dao = getBugReportDao();
			BugReport _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findByUser'
	 * 
	 * @param userId
	 */
	public static void findByUser(int userId)
	{
		try {
			BugReportDao _dao = getBugReportDao();
			BugReport _result[] = _dao.findByUser(userId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdEquals'
	 * 
	 * @param id
	 */
	public static void findWhereIdEquals(int id)
	{
		try {
			BugReportDao _dao = getBugReportDao();
			BugReport _result[] = _dao.findWhereIdEquals(id);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereTitleEquals'
	 * 
	 * @param title
	 */
	public static void findWhereTitleEquals(String title)
	{
		try {
			BugReportDao _dao = getBugReportDao();
			BugReport _result[] = _dao.findWhereTitleEquals(title);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereUserIdEquals'
	 * 
	 * @param userId
	 */
	public static void findWhereUserIdEquals(int userId)
	{
		try {
			BugReportDao _dao = getBugReportDao();
			BugReport _result[] = _dao.findWhereUserIdEquals(userId);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereMessageEquals'
	 * 
	 * @param message
	 */
	public static void findWhereMessageEquals(String message)
	{
		try {
			BugReportDao _dao = getBugReportDao();
			BugReport _result[] = _dao.findWhereMessageEquals(message);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereReportedOnEquals'
	 * 
	 * @param reportedOn
	 */
	public static void findWhereReportedOnEquals(Date reportedOn)
	{
		try {
			BugReportDao _dao = getBugReportDao();
			BugReport _result[] = _dao.findWhereReportedOnEquals(reportedOn);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getBugReportDao'
	 * 
	 * @return BugReportDao
	 */
	public static BugReportDao getBugReportDao()
	{
		return BugReportDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(BugReport dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getId() );
		buf.append( ", " );
		buf.append( dto.getTitle() );
		buf.append( ", " );
		buf.append( dto.getUserId() );
		buf.append( ", " );
		buf.append( dto.getMessage() );
		buf.append( ", " );
		buf.append( dto.getReportedOn() );
		System.out.println( buf.toString() );
	}

}
