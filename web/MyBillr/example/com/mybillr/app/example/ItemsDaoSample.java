/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mybillr.app.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.mybillr.app.dao.ItemsDao;
import com.mybillr.app.dto.Items;
import com.mybillr.app.exceptions.ItemsDaoException;
import com.mybillr.app.factory.ItemsDaoFactory;

public class ItemsDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWhereIdEquals(0);
		// findWhereNameEquals("");
		// findWhereParticipantEquals("");
		// findWherePriceEquals(0);
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			ItemsDao _dao = getItemsDao();
			Items _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdEquals'
	 * 
	 * @param id
	 */
	public static void findWhereIdEquals(int id)
	{
		try {
			ItemsDao _dao = getItemsDao();
			Items _result[] = _dao.findWhereIdEquals(id);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereNameEquals'
	 * 
	 * @param name
	 */
	public static void findWhereNameEquals(String name)
	{
		try {
			ItemsDao _dao = getItemsDao();
			Items _result[] = _dao.findWhereNameEquals(name);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereParticipantEquals'
	 * 
	 * @param participant
	 */
	public static void findWhereParticipantEquals(String participant)
	{
		try {
			ItemsDao _dao = getItemsDao();
			Items _result[] = _dao.findWhereParticipantEquals(participant);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWherePriceEquals'
	 * 
	 * @param price
	 */
	public static void findWherePriceEquals(long price)
	{
		try {
			ItemsDao _dao = getItemsDao();
			Items _result[] = _dao.findWherePriceEquals(price);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getItemsDao'
	 * 
	 * @return ItemsDao
	 */
	public static ItemsDao getItemsDao()
	{
		return ItemsDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Items dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getId() );
		buf.append( ", " );
		buf.append( dto.getName() );
		buf.append( ", " );
		buf.append( dto.getParticipant() );
		buf.append( ", " );
		buf.append( dto.getPrice() );
		System.out.println( buf.toString() );
	}

}
