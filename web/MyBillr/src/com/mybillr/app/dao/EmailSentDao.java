/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mybillr.app.dao;

import java.util.Date;
import com.mybillr.app.dto.*;
import com.mybillr.app.exceptions.*;

public interface EmailSentDao
{
	/** 
	 * Inserts a new row in the email_sent table.
	 */
	public EmailSentPk insert(EmailSent dto) throws EmailSentDaoException;

	/** 
	 * Updates a single row in the email_sent table.
	 */
	public void update(EmailSentPk pk, EmailSent dto) throws EmailSentDaoException;

	/** 
	 * Deletes a single row in the email_sent table.
	 */
	public void delete(EmailSentPk pk) throws EmailSentDaoException;

	/** 
	 * Returns the rows from the email_sent table that matches the specified primary-key value.
	 */
	public EmailSent findByPrimaryKey(EmailSentPk pk) throws EmailSentDaoException;

	/** 
	 * Returns all rows from the email_sent table that match the criteria 'id = :id'.
	 */
	public EmailSent findByPrimaryKey(int id) throws EmailSentDaoException;

	/** 
	 * Returns all rows from the email_sent table that match the criteria ''.
	 */
	public EmailSent[] findAll() throws EmailSentDaoException;

	/** 
	 * Returns all rows from the email_sent table that match the criteria 'id = :id'.
	 */
	public EmailSent[] findWhereIdEquals(int id) throws EmailSentDaoException;

	/** 
	 * Returns all rows from the email_sent table that match the criteria 'from = :from'.
	 */
	public EmailSent[] findWhereFromEquals(String from) throws EmailSentDaoException;

	/** 
	 * Returns all rows from the email_sent table that match the criteria 'to = :to'.
	 */
	public EmailSent[] findWhereToEquals(String to) throws EmailSentDaoException;

	/** 
	 * Returns all rows from the email_sent table that match the criteria 'subject = :subject'.
	 */
	public EmailSent[] findWhereSubjectEquals(String subject) throws EmailSentDaoException;

	/** 
	 * Returns all rows from the email_sent table that match the criteria 'message = :message'.
	 */
	public EmailSent[] findWhereMessageEquals(String message) throws EmailSentDaoException;

	/** 
	 * Returns all rows from the email_sent table that match the criteria 'sent_on = :sentOn'.
	 */
	public EmailSent[] findWhereSentOnEquals(Date sentOn) throws EmailSentDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the email_sent table that match the specified arbitrary SQL statement
	 */
	public EmailSent[] findByDynamicSelect(String sql, Object[] sqlParams) throws EmailSentDaoException;

	/** 
	 * Returns all rows from the email_sent table that match the specified arbitrary SQL statement
	 */
	public EmailSent[] findByDynamicWhere(String sql, Object[] sqlParams) throws EmailSentDaoException;

}
