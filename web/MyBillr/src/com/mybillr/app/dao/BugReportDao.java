/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mybillr.app.dao;

import java.util.Date;
import com.mybillr.app.dto.*;
import com.mybillr.app.exceptions.*;

public interface BugReportDao
{
	/** 
	 * Inserts a new row in the bug_report table.
	 */
	public BugReportPk insert(BugReport dto) throws BugReportDaoException;

	/** 
	 * Updates a single row in the bug_report table.
	 */
	public void update(BugReportPk pk, BugReport dto) throws BugReportDaoException;

	/** 
	 * Deletes a single row in the bug_report table.
	 */
	public void delete(BugReportPk pk) throws BugReportDaoException;

	/** 
	 * Returns the rows from the bug_report table that matches the specified primary-key value.
	 */
	public BugReport findByPrimaryKey(BugReportPk pk) throws BugReportDaoException;

	/** 
	 * Returns all rows from the bug_report table that match the criteria 'id = :id'.
	 */
	public BugReport findByPrimaryKey(int id) throws BugReportDaoException;

	/** 
	 * Returns all rows from the bug_report table that match the criteria ''.
	 */
	public BugReport[] findAll() throws BugReportDaoException;

	/** 
	 * Returns all rows from the bug_report table that match the criteria 'user_id = :userId'.
	 */
	public BugReport[] findByUser(int userId) throws BugReportDaoException;

	/** 
	 * Returns all rows from the bug_report table that match the criteria 'id = :id'.
	 */
	public BugReport[] findWhereIdEquals(int id) throws BugReportDaoException;

	/** 
	 * Returns all rows from the bug_report table that match the criteria 'title = :title'.
	 */
	public BugReport[] findWhereTitleEquals(String title) throws BugReportDaoException;

	/** 
	 * Returns all rows from the bug_report table that match the criteria 'user_id = :userId'.
	 */
	public BugReport[] findWhereUserIdEquals(int userId) throws BugReportDaoException;

	/** 
	 * Returns all rows from the bug_report table that match the criteria 'message = :message'.
	 */
	public BugReport[] findWhereMessageEquals(String message) throws BugReportDaoException;

	/** 
	 * Returns all rows from the bug_report table that match the criteria 'reported_on = :reportedOn'.
	 */
	public BugReport[] findWhereReportedOnEquals(Date reportedOn) throws BugReportDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the bug_report table that match the specified arbitrary SQL statement
	 */
	public BugReport[] findByDynamicSelect(String sql, Object[] sqlParams) throws BugReportDaoException;

	/** 
	 * Returns all rows from the bug_report table that match the specified arbitrary SQL statement
	 */
	public BugReport[] findByDynamicWhere(String sql, Object[] sqlParams) throws BugReportDaoException;

}
