/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mybillr.app.dao;

import com.mybillr.app.dto.*;
import com.mybillr.app.exceptions.*;

public interface SharedBillDao
{
	/** 
	 * Inserts a new row in the shared_bill table.
	 */
	public SharedBillPk insert(SharedBill dto) throws SharedBillDaoException;

	/** 
	 * Updates a single row in the shared_bill table.
	 */
	public void update(SharedBillPk pk, SharedBill dto) throws SharedBillDaoException;

	/** 
	 * Deletes a single row in the shared_bill table.
	 */
	public void delete(SharedBillPk pk) throws SharedBillDaoException;

	/** 
	 * Returns the rows from the shared_bill table that matches the specified primary-key value.
	 */
	public SharedBill findByPrimaryKey(SharedBillPk pk) throws SharedBillDaoException;

	/** 
	 * Returns all rows from the shared_bill table that match the criteria 'id = :id'.
	 */
	public SharedBill findByPrimaryKey(int id) throws SharedBillDaoException;

	/** 
	 * Returns all rows from the shared_bill table that match the criteria ''.
	 */
	public SharedBill[] findAll() throws SharedBillDaoException;

	/** 
	 * Returns all rows from the shared_bill table that match the criteria 'id = :id'.
	 */
	public SharedBill[] findWhereIdEquals(int id) throws SharedBillDaoException;

	/** 
	 * Returns all rows from the shared_bill table that match the criteria 'title = :title'.
	 */
	public SharedBill[] findWhereTitleEquals(String title) throws SharedBillDaoException;

	/** 
	 * Returns all rows from the shared_bill table that match the criteria 'participants = :participants'.
	 */
	public SharedBill[] findWhereParticipantsEquals(String participants) throws SharedBillDaoException;

	/** 
	 * Returns all rows from the shared_bill table that match the criteria 'paid_by = :paidBy'.
	 */
	public SharedBill[] findWherePaidByEquals(String paidBy) throws SharedBillDaoException;

	/** 
	 * Returns all rows from the shared_bill table that match the criteria 'items = :items'.
	 */
	public SharedBill[] findWhereItemsEquals(String items) throws SharedBillDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the shared_bill table that match the specified arbitrary SQL statement
	 */
	public SharedBill[] findByDynamicSelect(String sql, Object[] sqlParams) throws SharedBillDaoException;

	/** 
	 * Returns all rows from the shared_bill table that match the specified arbitrary SQL statement
	 */
	public SharedBill[] findByDynamicWhere(String sql, Object[] sqlParams) throws SharedBillDaoException;

}
