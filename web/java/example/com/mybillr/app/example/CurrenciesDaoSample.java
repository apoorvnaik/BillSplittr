/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.mybillr.app.example;

import java.math.*;
import java.util.Date;
import java.util.Collection;
import com.mybillr.app.dao.CurrenciesDao;
import com.mybillr.app.dto.Currencies;
import com.mybillr.app.exceptions.CurrenciesDaoException;
import com.mybillr.app.factory.CurrenciesDaoFactory;

public class CurrenciesDaoSample
{
	/**
	 * Method 'main'
	 * 
	 * @param arg
	 * @throws Exception
	 */
	public static void main(String[] arg) throws Exception
	{
		// Uncomment one of the lines below to test the generated code
		
		// findAll();
		// findWhereIdEquals(0);
		// findWhereCodeEquals("");
		// findWhereCurrencyEquals("");
		// findWhereCountryEquals("");
	}

	/**
	 * Method 'findAll'
	 * 
	 */
	public static void findAll()
	{
		try {
			CurrenciesDao _dao = getCurrenciesDao();
			Currencies _result[] = _dao.findAll();
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereIdEquals'
	 * 
	 * @param id
	 */
	public static void findWhereIdEquals(short id)
	{
		try {
			CurrenciesDao _dao = getCurrenciesDao();
			Currencies _result[] = _dao.findWhereIdEquals(id);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCodeEquals'
	 * 
	 * @param code
	 */
	public static void findWhereCodeEquals(String code)
	{
		try {
			CurrenciesDao _dao = getCurrenciesDao();
			Currencies _result[] = _dao.findWhereCodeEquals(code);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCurrencyEquals'
	 * 
	 * @param currency
	 */
	public static void findWhereCurrencyEquals(String currency)
	{
		try {
			CurrenciesDao _dao = getCurrenciesDao();
			Currencies _result[] = _dao.findWhereCurrencyEquals(currency);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'findWhereCountryEquals'
	 * 
	 * @param country
	 */
	public static void findWhereCountryEquals(String country)
	{
		try {
			CurrenciesDao _dao = getCurrenciesDao();
			Currencies _result[] = _dao.findWhereCountryEquals(country);
			for (int i=0; i<_result.length; i++ ) {
				display( _result[i] );
			}
		
		}
		catch (Exception _e) {
			_e.printStackTrace();
		}
		
	}

	/**
	 * Method 'getCurrenciesDao'
	 * 
	 * @return CurrenciesDao
	 */
	public static CurrenciesDao getCurrenciesDao()
	{
		return CurrenciesDaoFactory.create();
	}

	/**
	 * Method 'display'
	 * 
	 * @param dto
	 */
	public static void display(Currencies dto)
	{
		StringBuffer buf = new StringBuffer();
		buf.append( dto.getId() );
		buf.append( ", " );
		buf.append( dto.getCode() );
		buf.append( ", " );
		buf.append( dto.getCurrency() );
		buf.append( ", " );
		buf.append( dto.getCountry() );
		System.out.println( buf.toString() );
	}

}
